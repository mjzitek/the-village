<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
 /*display: none; */
}

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.js"></script>
<script>

var margin = {top: 20, right: 80, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
    //.tickValues([1, 2, 3, 5, 8, 13, 21])
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    //.interpolate("basis")
    .x(function(d) { return x(d.age); })
    .y(function(d) { return y(d.height); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("data.tsv", function(error, data) {
  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "age"; }));

  // data.forEach(function(d) {
  //   d.date = parseDate(d.date);
  // });

  console.log(data);

  var people = color.domain().map(function(name) {
    console.log(name);
    return {
      person: name,
      values: data.map(function(d) {
        console.log(d);
        return {age: parseInt(d.age), height: +d[name]};
      })
    };
  });

  console.log(people);

  x.domain(d3.extent(data, function(d) { return d.age; }));

  y.domain([
    d3.min(people, function(c) { return d3.min(c.values, function(v) { return v.height; }); }),
    d3.max(people, function(c) { return d3.max(c.values, function(v) { return v.height; }); })
  ]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
      .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("height");

  var people = svg.selectAll(".people")
      .data(people)
    .enter().append("g")
      .attr("class", "people");

  people.append("path")
      .attr("class", "line")
      .attr("d", function(d) { console.log(d); return line(d.values); })
      .style("stroke", function(d) { console.log(d);return color(d.person); });

  people.append("text")
      .datum(function(d) { return {person: d.person, value: d.values[d.values.length - 1]}; })
      .attr("transform", function(d) { return "translate(" + x(d.value.height) + "," + y(d.value.age) + ")"; })
      .attr("x", 3)
      .attr("dy", ".35em")
      .text(function(d) { return d.person; });
});

</script>